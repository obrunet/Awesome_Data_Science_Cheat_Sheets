# BASIC TYPES
0 -192 0b010 0xF3				# int - no limit
9.23 0.0 -1.7e-6				# float
"One\nTwo"						# str with CRLF
"""string"""					# multiline str
"I'm" 'I\'m'					# escaped char
_								# var we don’t care about 

# ADVANCED TYPES
[]  ["x",11,8.9]  ["st"]	# list
()  11,"y",7.4    ("st",)	# tuple
{}  {1:"one",3:"three"}		# dict  ??? default ???
    {"key1","key2"}			# set

------ tableau vivadata


# CALCULATION & OPERATORS
+ - * / 						# basic operations 
% // ~ 							# modulo, floor div, complement
is is not 						# identity op
in not in						# membership op
not or and						# logical op
>> <<							# right/left bitwise shift
**  ~+-  */%// +-  &^|			# highest precedence to lowest      
<= < > >=     <> == !=
= %= /= //= -= += *= **=
is is not		

# TYPE CONVERSION
bool() int() float() str()

# ASSIGNMENT
a=b=c=0
a, b = 1, 2
a, b = b, a 	# swap
x, *y, z = (10, "str ", "str_bis ", 50)  	# unpacking
h, i = "hi"									# str unpacked
*content, last_line = open('/etc/fstab')	# unpacked last elt
+=  -=  *=  /=
del var


# STRING OPERATONS
st * 2
st + 'Innit'
'm' in st
st[5]
st.upper() / st.lower()						# upper/lower case (=)
st.count('w')								# count str elt
st.replace('e', 'i')						# replace elt
st.strip()									# strip whitespace start/end

# LIST OPERATIONS
lst_1 + lst_2								# concatenation
lst * 2										# x2
lst.index(elt)								# get an item's index
lst.count(elt)								# count elt
lst.append('!')								# append
lst.remove('!')
del(lst[0:1]))								# delete 1 elt
lst.reverse()								# reverse
lst.extend('!')
lst.pop(-1)
lst.insert(0,'!')
lst.sort()   sorted(lst)					# sort =

# DICT OPERATIONS
d[key]=value
d.keys()									# keys' list
d.values()									# values' list
d.items()									# keys/values associations
d.clear()
del d[key]
d.get(key[,default])→ value
d.setdefault(key[,default])→value

# FILE OPERATIONS
with open(…) as f:							# automatic closing
	for line in f :							# read and write ????
		# processing ofline

5 == True  (False)
1 == True  (True)
0 == False (True)
5 == False (False)

Count an item
Append an item at a time
Remove an item
Remove an item
Reverse the list
Append an item
Remove an item
Insert an item
Sort the list



lst = [("a", "b"), (1, 2)]
for x, y in lst:
    print(x, "\n", y)




enumerate or zip
x = [1, 2, 3]
y = [4, 5, 6]
list(zip(x, y))


reverse a dict


# LIBRARIES
import numpy as np  --> np.nan			# import lib
from math import pi 					# selective import


# Keywords

# List comprehension
[i for i in l_floats if i < 0.5]

# REGEX
# PEP8